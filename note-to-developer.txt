GETTING TO KNOW THE CKAN PAGE TRACKING SYSTEM

- it's very simple
- based on two tables
   - tracking_raw
   - tracking_summary

Have a quick read of Page Tracking in the CKAN documentation
- docs.ckan.org -> Maintainers Guide -> Page Tracking

Make a dataaset in the CKAN site
- make one resource that is a file upload
- make one resource that is linked to an internet resource

Turn Page Tracking on in your CKAN installation
- Open your .ini file
- add this line somewhere in the [app:main] section:   ckan.tracking_enabled = true

Click pages in the ckan site
- Click on the Dataset
- Click on the resources and also click the download button

See the entries made in the tracking_raw table
- entries are made for every page in the site
- views of datasets and resources are recorded as tracking_type: 'page'
- where a user clicks the 'download' button, the tracking_type is 'resource'

Switch to another browser and click around the site
- the user_key will be different - this is used later by the tracking_summary table so that multiple views of the same page by the same browser is not tallied up


Run the paster task to tally up the page views
cd /usr/lib/ckan/default/src/ckan
paster tracking update -c /etc/ckan/default/production.ini

- look at what is populated in the tracking_summary table
- One entry for each page for each day
(I think I've made notes in confluence on some of this) Confluence -> CKAN -> Page Tracking


Page Tracking Views in the UI
- with tracking enabled, you can see a little flame icon where datasets and resources are listed
- you can only see the flame when a dataset/resource has more than 10 views (not very useful but it's core CKAN - not configurable)



THIS EXTENSION
- overrides the resource_item and package_item templates and instead uses a custom template to display tracking to the user
- It will stop page views from showing in the UI unless you specifically want them to display by adding this in the .ini file:
  trak.display_pageviews = true
 - this should be handy for when you deploy because you can get everything setup and then switch it on in the UI


 paster bulk import command
 - used to import a cleaned version of Google Analytics data
 - SSQ will supply the export for both 'publications' and 'data' sites
 - See the example 'data.csv' in this repo - this is how the file should look before bulk import - stripped of everything except for the page urls with their view counts etc
 - the import is intended for single use only. Just to get the Google Analytics data into the tracking_raw table
 - Google Analytics page view data is imported and entered as a single data (far in the past). This doesn't matter - the important thing is that there is a single entry for each url (with unique id) for x number of pageviews
 - This is the command
   paster --plugin=ckanext-trak csv2table <csv_file> -c /path/to/production.ini
 - will take a while to run and it's not geared for fastness but it will output to the stdout so you know where it's at
 - once the bulk import is complete you can run the 'paster tracking update' command to populate the tracking_summary table


 About the search-index
 - The tracking system, as shown in the UI, actually works off what's in the search-index. E.g. look at what the API returns for a dataset e.g.
 localhost:5000/api/action/package_show?id=<dataset_name>
 - you can see the tracking info in the json that is returned. In this the dataset has 'tracking_summary' and any of it's resources also has 'tracking_summary'
 - The Dataset's tracking_summary seems to work okay, but the resource's tracking_summary doesn't seem to work so good. That's why the plugin for this extension needs to do some extra work with the search index - see plugin.py before_index()


 Other TODOs
 - SSQ will probably want the UI presentation to not be styled. Just give them some <span>'s with a tag or something and they'll take care of it. Just let them know what you're going to do



 OTHER NOTES
- SSQ only have GA data for their production sites
- Need to get fresh GA exports for 'data' and 'publications' before you do the bulk import
- I've made some notes in plugin.py before_index() of how it think you should go about getting the resource tracking_summary into the index. I'm just jotting down notes at the airport so haven't really experiemented much further with it though
- You should develop against CKAN 2.0. I don't think there will be any difference between 2.0 and 2.2 but better safe than sorry
- The metric used from the GA data is 'PageViews'. I discussed this with Rory and decided that this would be the best to use
- When the extension is ready and tested, deploy to github and let SSQ know it's available and when they want it run
- Becuase it will take 14 days for the native CKAN tracking to build up 'recent' data, you should aim to get the extension installed and running (albeit with track.display_pageviews set to 'false') at least two weeks before they intend to release the feature to the public
- You might want to turn CKAN's page tracking on in SSQ's staging environments but check with Rory or Ray first.
- Goog luck with it all, I hope this has been helpful


ONE LAST THING
- remove this page before adding repo to github


